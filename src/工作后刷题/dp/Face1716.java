package 工作后刷题.dp;

/**
 * @Author:zbl
 * @Date:2024/1/12 22:20
 * <p>
 * 一个有名的按摩师会收到源源不断的预约请求，
 * 每个预约都可以选择接或不接。在每次预约服务之间要有休息时间，
 * 因此她不能接受相邻的预约。给定一个预约请求序列，替按摩师找到最优的预约集合（总预约时间最长），返回总的分钟数。
 * <p>
 * 注意：本题相对原题稍作改动
 * <p>
 * <p>
 * <p>
 * 示例 1：
 * <p>
 * 输入： [1,2,3,1]
 * 输出： 4
 * 解释： 选择 1 号预约和 3 号预约，总时长 = 1 + 3 = 4。
 * 示例 2：
 * <p>
 * 输入： [2,7,9,3,1]
 * 输出： 12
 * 解释： 选择 1 号预约、 3 号预约和 5 号预约，总时长 = 2 + 9 + 1 = 12。
 * 示例 3：
 * <p>
 * 输入： [2,1,4,5,3,1,1,3]
 * 输出： 12
 * 解释： 选择 1 号预约、 3 号预约、 5 号预约和 8 号预约，总时长 = 2 + 4 + 3 + 3 = 12。
 */
public class Face1716 {

    //类似打家劫舍
    public int massage(int[] nums) {
        if(nums == null || nums.length == 0) {
            return 0;
        }
        int n = nums.length;
        int[][] dp = new int[nums.length][2];
        dp[n - 1][1] = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            dp[i][0] = Math.max(dp[i + 1][1], dp[i + 1][0]);
            dp[i][1] = nums[i] + dp[i + 1][0];
        }
        return Math.max(dp[0][0], dp[0][1]);

    }
}
