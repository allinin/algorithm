工厂模式分为：
1、简单工厂模式：主要用于对实现逻辑的封装。通过公共的接口提供对象的实例化服务。寻常的简单工厂模式实现中可能会有一些if else语句，这违背了开闭原则。可以通过使用
Map+反射的方式来解决，但是这也造成了性能的下降。
2、工厂方法模式:将工厂类抽象化，具体特定化的逻辑代码转移到实现抽象方法的子类中，这样我们就不用再去修改工厂类(即不用再去做if else修改)。
3、抽象工厂模式：工厂方法类中只有一个抽象方法，要想实现多中不同的类对象，只能去创建不同的具体工厂方法的子类去实例化，而抽象工厂则是让一个工厂负责创建多个不同类型的对象。
====================
什么时候用简单工厂模式，什么时候用工厂方法模式？
当对象的逻辑比较复杂，不只是简单的new一下就可以，而是要组合其他类对象，做各种初始化操作的时候，我们推荐使用工厂方法模式，将复杂的创建逻辑拆到多个工厂类中，
让每个工厂类都不至于过于复杂。而使用简单工厂模式，将所有的创建逻辑都放到同一个工厂类中，会导致这个工厂类过于复杂。